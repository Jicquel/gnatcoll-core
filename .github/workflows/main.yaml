on: [push, pull_request]
name: BuildAndTest
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: Build
    steps:
      # Get current date (used to create a daily cache of dependencies)
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      # Checkout gnatcoll sources
      - name: Get GNATCOLL
        uses: actions/checkout@v4

      # # Handle installation of the compiler
      # # (Community 2020 for MacOS and Community 2021 for others)
      # - name: Cache compiler installation
      #   id: cache-compiler
      #   uses: actions/cache@v2
      #   with:
      #     path: ./cached_gnat
      #     key: ${{ runner.os }}-gnat

      - name: Get alire
        uses: alire-project/setup-alire@v2
        with:
          version: "nightly"


      # - name: Get GNAT Community 2021 toolchain
      #   if: ${{ runner.os != 'macOS' }}
      #   uses: ada-actions/toolchain@ce2021
      #   with:
      #     distrib: community
      #     install_dir: ./cached_gnat
      # - name: Get GNAT Community 2020 toolchain
      #   if: ${{ runner.os == 'macOS' }}
      #   uses: ada-actions/toolchain@ce2020
      #   with:
      #     distrib: community
      #     install_dir: ./cached_gnat

      # Handle dependencies
      # - name: Cache dependency artifacts on daily basis
      #   id: cache-deps
      #   uses: actions/cache@v2
      #   with:
      #     path: ./build_deps
      #     key: ${{ runner.os }}-${{ steps.date.outputs.date }}-build-deps-v2

      # # # On MacOS, build a recent libgpr
      # - name: Get gprbuild for libgpr
      #   if: ${{ runner.os == 'macOS' && steps.cache-deps.outputs.cache-hit != 'true' }}
      #   uses: actions/checkout@v4
      #   with:
      #     repository: AdaCore/gprbuild
      #     path: gprbuild
      #     fetch-depth: 0  # To be able do `git revert`
      # - name: Revert a libgpr patch (MacOS X only)
      #   # The latest libgpr doesn't support GNAT CE 2020, but on MacOS X we
      #   # don't have GNAT CE 2021. Let's revert this commit for now.
      #   if: ${{ runner.os == 'macOS' && steps.cache-deps.outputs.cache-hit != 'true' }}
      #   run: git -C gprbuild revert --no-edit 3341766255bf5ab90fe05a8e162894b7830adca6

      # - name: Build gprbuild
      #   if: ${{ runner.os == 'macOS' && steps.cache-deps.outputs.cache-hit != 'true' }}
      #   run: |
      #       CWD=$(pwd)
      #       mkdir -p ./build_deps/libs
      #       cd gprbuild && make libgpr.build && make libgpr.install prefix=$CWD/build_deps/libs


      # - name: Get e3-core
      #   if: steps.cache-deps.outputs.cache-hit != 'true'
      #   run: git clone https://github.com/AdaCore/e3-core.git
      # - uses: actions/setup-python@v2
      #   with:
      #       python-version: '3.12'
      # - name: Install e3 testsuite and core
      #   run: |
      #     pip3 install e3-testsuite
      # #     pip3 install e3-core
      - name: Install gprbuild and the gnat toolchain with alire
        run: |
             alr install gprbuild --prefix=gprbuild
             echo $PWD/gprbuild/bin >> $GITHUB_PATH
             alr install gnat_native --prefix=gnat
             echo $PWD/gnat/bin >> $GITHUB_PATH

      # # Build, Install and test gnatcoll in DEBUG mode
      - name: Build GNATCOLL
        run: |
             alr get libgpr && cd libgpr* && alr install & cd -
             export GPR_PROJECT_PATH=$PWD/$(alr get libgpr --dirname)/gpr:$GPR_PROJECT_PATH
             echo $GPR_PROJECT_PATH
             make BUILD=DEBUG
      - name: Install GNATCOLL
        run: make BUILD=DEBUG install
      - name: Test GNATCOLL
        run: (cd testsuite && python3 ./run-tests -j2 --failure-exit-code 1 -E)
